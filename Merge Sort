#include <iostream>
#include <vector>
#include <cmath>
#include <climits>
using namespace std;
void Merge(vector<int> &A, int start, int mid, int end) 
{
	vector<int>left(A.begin() + start, A.begin() + mid + 1),
		right(A.begin() + mid + 1, A.begin() + end + 1);
	left.insert(left.end(), INT_MAX);
	right.insert(right.end(), INT_MAX);

	int index_left = 0, index_right = 0;
	for (int i = start; i <= end; i++) 
	{
		if (left[index_left] > right[index_right]) 
		{
			A[i] = right[index_right];
			index_right++;
		}
		else 
		{
			A[i] = left[index_left];
			index_left++;
		}
	}
}
void MergeSort(vector<int> &A, int start, int end) 
{
	if (start < end) 
	{
		int mid = start + (end - start) / 2;

		MergeSort(A, start, mid);
		MergeSort(A, mid + 1, end);
		Merge(A, start, mid, end);
		for (int i = 0; i < A.size(); i++)
			cout << A[i] << " ";
		cout << endl;
	}
}

int main(int argc, char *argv[]) 
{
	vector<int> A;
	int i, n;
	for (cin >> i; i > 0; i--) 
	{
		cin >> n;
		A.push_back(n);
	}
	MergeSort(A, 0, A.size() - 1);
}
